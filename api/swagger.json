{
  "openapi": "3.0.0",
  "info": {
    "title": "Portal Lonper API",
    "version": "v0.0.1",
    "description": "Portal Lonper API documentation"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local server"
    },
    {
      "url": "https://api.lonper.molmos.dev",
      "description": "Production server"
    }
  ],
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the address"
          },
          "city": {
            "type": "string",
            "description": "City of the address"
          },
          "streetAndNumber": {
            "type": "string",
            "description": "Street and number of the address"
          },
          "postalCode": {
            "type": "integer",
            "description": "Postal code of the address"
          },
          "province": {
            "type": "string",
            "description": "Province of the address"
          },
          "country": {
            "type": "string",
            "description": "Country of the address"
          }
        },
        "required": [
          "id",
          "city",
          "streetAndNumber",
          "postalCode",
          "province",
          "country"
        ]
      },
      "NewAddressPayload": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City of the new address"
          },
          "streetAndNumber": {
            "type": "string",
            "description": "Street and number of the new address"
          },
          "postalCode": {
            "type": "integer",
            "description": "Postal code of the new address"
          },
          "province": {
            "type": "string",
            "description": "Province of the new address"
          },
          "country": {
            "type": "string",
            "description": "Country of the new address"
          }
        },
        "required": [
          "city",
          "streetAndNumber",
          "postalCode",
          "province",
          "country"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP error code"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message"
          }
        },
        "required": ["code", "message"]
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the article"
          },
          "article": {
            "type": "string",
            "description": "Article code"
          },
          "name": {
            "type": "string",
            "description": "Name of the article"
          },
          "familyCode": {
            "type": "string",
            "description": "Family code of the article"
          },
          "familyDesc": {
            "type": "string",
            "description": "Family description of the article"
          },
          "subfamilyCode": {
            "type": "string",
            "description": "Subfamily code of the article"
          },
          "subfamilyDesc": {
            "type": "string",
            "description": "Subfamily description of the article"
          },
          "blqC": {
            "type": "number",
            "description": "Block C value"
          },
          "blqV": {
            "type": "number",
            "description": "Block V value"
          },
          "type": {
            "type": "string",
            "description": "Type of the article"
          },
          "subtype": {
            "type": "string",
            "description": "Subtype of the article"
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the article",
            "nullable": true
          },
          "blqVName": {
            "type": "string",
            "description": "Block V name",
            "nullable": true
          },
          "lonRate": {
            "type": "string",
            "description": "Lon rate of the article"
          },
          "lonGroup": {
            "type": "string",
            "description": "Lon group of the article"
          },
          "lonEdging": {
            "type": "string",
            "description": "Lon edging of the article"
          },
          "salePriceBeforeDiscount": {
            "type": "number",
            "description": "Sale price before discount",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "description": "Sale price of the article"
          },
          "unsubscribed": {
            "type": "number",
            "description": "Unsubscribed value"
          },
          "crtlStk": {
            "type": "number",
            "description": "Control stock value"
          },
          "dto1": {
            "type": "number",
            "description": "Discount 1"
          },
          "dto2": {
            "type": "number",
            "description": "Discount 2"
          },
          "dto3": {
            "type": "number",
            "description": "Discount 3"
          }
        },
        "required": [
          "id",
          "article",
          "name",
          "familyCode",
          "familyDesc",
          "subfamilyCode",
          "subfamilyDesc",
          "blqC",
          "blqV",
          "type",
          "subtype",
          "lonRate",
          "lonGroup",
          "lonEdging",
          "salePrice",
          "unsubscribed",
          "crtlStk",
          "dto1",
          "dto2",
          "dto3"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication related endpoints"
    },
    {
      "name": "Addresses",
      "description": "Address related endpoints"
    },
    {
      "name": "Articles",
      "description": "Articles related endpoints"
    }
  ],
  "paths": {
    "/api/v2/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in a user",
        "description": "This endpoint allows a user to log in.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email address",
                    "example": "lonper.dev@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "admin2023"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log out a user",
        "description": "This endpoint allows a user to log out.",
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/sendPasswordResetEmail": {
      "post": {
        "tags": ["Auth"],
        "summary": "Send a password reset email",
        "description": "This endpoint allows sending a password reset email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email address"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/auth/getCurrentUser": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get the current user",
        "description": "This endpoint returns the current authenticated user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "description": "User data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/addresses/getAddresses": {
      "get": {
        "tags": ["Addresses"],
        "summary": "Get all addresses",
        "description": "This endpoint returns a list of all stored addresses.",
        "responses": {
          "200": {
            "description": "List of addresses obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while getting addresses."
          }
        }
      }
    },
    "/api/v2/addresses/postAddress": {
      "post": {
        "tags": ["Addresses"],
        "summary": "Create a new address",
        "description": "This endpoint allows creating a new address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAddressPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Address created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Check the input data format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error while creating the address."
          }
        }
      }
    },
    "/api/v2/addresses/putAddress": {
      "put": {
        "tags": ["Addresses"],
        "summary": "Update an existing address",
        "description": "This endpoint allows updating data for an existing address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Check the input data format or the address ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Address not found with the provided ID."
          },
          "500": {
            "description": "Server error while updating the address."
          }
        }
      }
    },
    "/api/v2/addresses/deleteAddress": {
      "delete": {
        "tags": ["Addresses"],
        "summary": "Delete an address",
        "description": "This endpoint allows deleting an address using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the address to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Address deleted successfully (no content in response)."
          },
          "400": {
            "description": "Invalid request. Check if the address ID is valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Address not found with the provided ID."
          },
          "500": {
            "description": "Server error while deleting the address."
          }
        }
      }
    },
    "/api/v2/articles/getArticlesByIds": {
      "post": {
        "tags": ["Articles"],
        "summary": "Get articles by their IDs",
        "description": "This endpoint allows retrieving articles by their IDs.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "articleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of article IDs"
                  }
                },
                "required": ["articleIds"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Articles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
