{
  "openapi": "3.0.0",
  "info": {
    "title": "Portal Lonper API",
    "version": "v1.0.0",
    "description": "Portal Lonper API documentation"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Servidor local de Deno/Hono"
    },
    {
      "url": "https://api.lonper.molmos.dev",
      "description": "Production server"
    }
  ],
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the address"
          },
          "city": {
            "type": "string",
            "description": "City of the address"
          },
          "streetAndNumber": {
            "type": "string",
            "description": "Street and number of the address"
          },
          "postalCode": {
            "type": "integer",
            "description": "Postal code of the address"
          },
          "province": {
            "type": "string",
            "description": "Province of the address"
          },
          "country": {
            "type": "string",
            "description": "Country of the address"
          }
        },
        "required": [
          "id",
          "city",
          "streetAndNumber",
          "postalCode",
          "province",
          "country"
        ]
      },
      "NewAddressPayload": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "City of the new address"
          },
          "streetAndNumber": {
            "type": "string",
            "description": "Street and number of the new address"
          },
          "postalCode": {
            "type": "integer",
            "description": "Postal code of the new address"
          },
          "province": {
            "type": "string",
            "description": "Province of the new address"
          },
          "country": {
            "type": "string",
            "description": "Country of the new address"
          }
        },
        "required": [
          "city",
          "streetAndNumber",
          "postalCode",
          "province",
          "country"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP error code"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message"
          }
        },
        "required": ["code", "message"]
      }
    }
  },
  "paths": {
    "/api/v1/addresses/getAddresses": {
      "get": {
        "summary": "Get all addresses",
        "description": "This endpoint returns a list of all stored addresses.",
        "responses": {
          "200": {
            "description": "List of addresses obtained successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error while getting addresses."
          }
        }
      }
    },
    "/api/v1/addresses/postAddress": {
      "post": {
        "summary": "Create a new address",
        "description": "This endpoint allows creating a new address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAddressPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Address created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Check the input data format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error while creating the address."
          }
        }
      }
    },
    "/api/v1/addresses/putAddress": {
      "put": {
        "summary": "Update an existing address",
        "description": "This endpoint allows updating data for an existing address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Check the input data format or the address ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Address not found with the provided ID."
          },
          "500": {
            "description": "Server error while updating the address."
          }
        }
      }
    },
    "/api/v1/addresses/deleteAddress": {
      "delete": {
        "summary": "Delete an address",
        "description": "This endpoint allows deleting an address using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the address to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Address deleted successfully (no content in response)."
          },
          "400": {
            "description": "Invalid request. Check if the address ID is valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Address not found with the provided ID."
          },
          "500": {
            "description": "Server error while deleting the address."
          }
        }
      }
    }
  }
}
